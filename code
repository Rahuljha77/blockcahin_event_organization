//SPDX-License-Identifier: Unlicense
pragma solidity >=0.5.0 <0.9.0;

contract eventcontract{
    struct Event{
        address organizer;
        string name;
        uint tickercount;
        uint ticketremain;
        uint date;
        uint price;
        
    }

    mapping(uint=>Event) public events;

    mapping(address=>mapping(uint=>uint)) public tickets;

    uint nextid;

    function createEvent( string memory name, uint price, uint date, uint ticketcount) public{
        require(date>block.timestamp);
        require(ticketcount>0);
        events[nextid]=Event(msg.sender,name,price,date,ticketcount,ticketcount);
        nextid++;
    }

    function buyticket(uint id, uint quantity) public payable{
        require(events[id].date>block.timestamp);
        require(events[id].date != 0);
        Event storage _event = events[id];

        require(msg.value== _event.price*quantity);
        require(_event.ticketremain>=quantity);

        _event.ticketremain -= quantity;
        tickets[msg.sender][id]+=quantity;
    } 

    function transferTicket(uint id, uint quantity, address to) public{
        require(events[id].date>block.timestamp);
        require(events[id].date != 0);
        require(tickets[msg.sender][id]>= quantity);

        tickets[msg.sender][id]-=quantity;
        tickets[to][id]+=quantity;
    }
}
